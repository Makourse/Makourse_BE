name: Deploy Django Application

on:
  push:
    branches:
      - main  # main 브랜치에 푸시할 때만 실행

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: 코드 가져오기
      uses: actions/checkout@v3

    - name: Python 설정
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'  # 서버의 Python 버전과 일치
    - name: 디렉토리 및 파일 확인
      run: |
        echo "현재 디렉토리 확인:"
        pwd
        echo "디렉토리 내용:"
        ls -al
        echo "requirements.txt 내용:"
        cat requirements.txt || echo "requirements.txt 파일이 없습니다."
    - name: 필수 라이브러리 설치
      run: |
        echo "pip 업그레이드 및 필수 라이브러리 설치 중..."
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: 테스트 실행
      run: |
        echo "Django 테스트 실행 중..."
        python manage.py test

    - name: EC2에 배포
      uses: appleboy/ssh-action@v0.1.7
      with:
        host: ${{ secrets.EC2_HOST }}       # EC2 IP 주소
        username: ${{ secrets.EC2_USER }}   # EC2 사용자 이름 (예: ubuntu)
        key: ${{ secrets.EC2_KEY }}         # EC2 개인 키
        script: |
          echo "EC2 배포 시작"

          # 프로젝트 디렉토리로 이동
          cd /home/ubuntu/Makourse_BE/makourse          
          echo "GitHub에서 최신 코드 가져오는 중..."
          git fetch --all
          git reset --hard origin/main

          echo "가상환경 설정 중..."
          if [ ! -d "/home/ubuntu/makourse_env" ]; then
            python3.12 -m venv /home/ubuntu/makourse_env
          fi
          source /home/ubuntu/makourse_env/bin/activate 

          echo "의존성 설치 중..."
          pip install --upgrade pip
          pip install -r /home/ubuntu/Makourse_BE/makourse/requirements.txt

          echo "마이그레이션 및 정적 파일 수집 중..."
          python manage.py migrate
          python manage.py collectstatic --noinput

          echo "서비스 재시작 중..."
          uwsgi --ini /home/ubuntu/Makourse_BE/makourse/uwsgi.ini
          sudo systemctl restart nginx

          echo "배포 완료!"
