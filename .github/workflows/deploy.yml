name: Deploy Django Application

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Start SSH Agent and Add Key
      uses: webfactory/ssh-agent@v0.5.3
      with:
        ssh-private-key: ${{ secrets.EC2_KEY }}

    - name: Deploy to EC2
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USER }}
        key: ${{ secrets.EC2_KEY }}
        script: |
          set -e
          echo "============================"
          echo "EC2 배포 시작"
          echo "============================"
          echo "현재 디렉토리 상태 확인:"
          ls -al /home/ubuntu/Makourse_BE || {
            echo "Makourse_BE 디렉토리가 존재하지 않습니다."; exit 1;
          }
          cd /home/ubuntu/Makourse_BE/makourse

          echo "Git 리모트 주소 확인 및 설정"
          git remote set-url origin git@github.com:Makourse/Makourse_BE.git
          git fetch --all
          git reset --hard origin/main

          echo "가상환경 설정"
          if [ ! -d "/home/ubuntu/makourse_env" ]; then
            python3.12 -m venv /home/ubuntu/makourse_env
          fi
          source /home/ubuntu/makourse_env/bin/activate

          echo "의존성 설치"
          pip install --upgrade pip
          pip install -r requirements.txt

          echo "마이그레이션 및 정적 파일 수집"
          python manage.py migrate
          python manage.py collectstatic --noinput

          echo "기존 uWSGI 프로세스 종료 중..."
          timeout 10 pkill -f uwsgi || echo "uWSGI 프로세스 없음. 계속 진행합니다."
          
          echo "남아 있는 소켓 및 PID 파일 제거 중..."
          sudo rm -f /home/ubuntu/Makourse_BE/makourse/uwsgi.sock
          sudo rm -f /tmp/project-master.pid
          
          echo "uWSGI 실행"
          /home/ubuntu/makourse_env/bin/uwsgi --ini uwsgi.ini || {
              echo "uWSGI 실행 실패. 로그 확인:"
              tail -n 50 /home/ubuntu/Makourse_BE/makourse/django.log
              exit 1
          }

          echo "Nginx 서비스 재시작"
          sudo systemctl restart nginx || {
              echo "Nginx 재시작 실패. 에러 로그:"
              sudo tail -n 50 /var/log/nginx/error.log
              exit 1
          }

          echo "배포 완료!"
